steps:
  # Stop exisiting builds of the same trigger
  - id: 'Stop Other Ongoing Build'
    name: 'gcr.io/cloud-builders/gcloud'
    # The '-' indicates that this step begins immediately. Without this line it will wait for all previous steps to complete
    waitFor: ['-']
    entrypoint: 'bash'
    args:
      - -c
      - |
        on_going_build=($(gcloud builds list --ongoing --format='value(id)' --filter="substitutions.TRIGGER_NAME=$TRIGGER_NAME" | xargs))
        for (( i=0; i<${#on_going_build[@]}; i++ )); do
          if [ "$i" -gt "0" ]; then # skip current
            echo "Cancelling build ${on_going_build[i]}"

            gcloud builds cancel ${on_going_build[i]}
          fi
        done

  # Download the gradle.properties file, which stores the build number.
  - id: download_properties
    name: 'gcr.io/cloud-builders/gsutil'
    dir: 'android/app/'
    waitFor: ['-']
    args:
      [
        'cp',
        'gs://shoutout-version-code/gradle.properties',
        'gradle.properties',
      ]

  #
  # Read key store secret
  - id: read_key_store
    name: 'gcr.io/cloud-builders/gcloud'
    dir: 'android/app/'
    waitFor: ['-']
    entrypoint: 'bash'
    args:
      [
        '-c',
        "gcloud secrets versions access latest --secret=playstore-key-store --format='get(payload.data)' | tr '_-' '/+' | base64 -d > keystore",
      ]
  #
  # Read service account key secret
  - id: read_service_account_key
    name: 'gcr.io/cloud-builders/gcloud'
    dir: 'android/app/'
    waitFor: ['-']
    entrypoint: 'bash'
    args:
      [
        '-c',
        "gcloud secrets versions access latest --secret=playstore-service-account-key --format='get(payload.data)' | tr '_-' '/+' | base64 -d > service-account-key.json",
      ]

  #
  # Build the project
  - id: install_packages
    name: 'reactnativecommunity/react-native-android'
    waitFor: ['-']
    entrypoint: npm
    args: ['install', '--legacy-peer-deps']

  #
  # Install @googleapis/androidpublisher
  - id: install_androidpublisher_package
    name: 'reactnativecommunity/react-native-android'
    waitFor: ['install_packages']
    entrypoint: npm
    args: ['install', '@googleapis/androidpublisher', '--legacy-peer-deps']
  #
  # Build
  - id: build
    name: 'reactnativecommunity/react-native-android'
    dir: 'android/'
    waitFor:
      [
        'read_key_store',
        'read_service_account_key',
        'install_androidpublisher_package',
        'download_properties',
      ]
    entrypoint: bash
    args: ['./app/bundle.sh']
    env:
      - 'BRANCH_NAME=$BRANCH_NAME'
    secretEnv: ['KEY_STORE_PASSWORD', 'KEY_ALIAS', 'KEY_PASSWORD']

  # Upload gradle.properties
  - id: upload_properties
    name: 'gcr.io/cloud-builders/gsutil'
    waitFor: ['build']
    dir: 'android/app/'
    args:
      [
        'cp',
        'gradle.properties',
        'gs://shoutout-version-code/gradle.properties',
      ]

  #
  # Upload the app bundle
  - id: 'upload app bundle to playstore'
    name: 'reactnativecommunity/react-native-android'
    dir: 'android/app/'
    waitFor: ['upload_properties']
    entrypoint: node
    args: ['upload-google-play.js', '${BRANCH_NAME}']

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/playstore-key-store-password/versions/latest
      env: 'KEY_STORE_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/playstore-key-alias/versions/latest
      env: 'KEY_ALIAS'
    - versionName: projects/$PROJECT_ID/secrets/playstore-key-password/versions/latest
      env: 'KEY_PASSWORD'

# options:
# machineType: 'E2_HIGHCPU_8'

timeout: '5400s'
